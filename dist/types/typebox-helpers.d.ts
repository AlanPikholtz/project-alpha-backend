import { FastifyRequest, FastifyReply, RouteOptions } from 'fastify';
import { TSchema } from '@sinclair/typebox';
export interface TypeBoxRouteOptions<TBody extends TSchema = never, TQuerystring extends TSchema = never, TParams extends TSchema = never, THeaders extends TSchema = never> extends Omit<RouteOptions, 'schema'> {
    schema?: {
        body?: TBody;
        querystring?: TQuerystring;
        params?: TParams;
        headers?: THeaders;
        response?: Record<string, TSchema>;
    };
}
export type TypeBoxHandler<TBody extends TSchema = never, TQuerystring extends TSchema = never, TParams extends TSchema = never, THeaders extends TSchema = never> = (request: FastifyRequest<{
    Body: TBody extends TSchema ? TBody['static'] : unknown;
    Querystring: TQuerystring extends TSchema ? TQuerystring['static'] : unknown;
    Params: TParams extends TSchema ? TParams['static'] : unknown;
    Headers: THeaders extends TSchema ? THeaders['static'] : unknown;
}>, reply: FastifyReply) => Promise<any>;
export declare function createTypedRoute<TBody extends TSchema = never, TQuerystring extends TSchema = never, TParams extends TSchema = never, THeaders extends TSchema = never>(options: TypeBoxRouteOptions<TBody, TQuerystring, TParams, THeaders>, handler: TypeBoxHandler<TBody, TQuerystring, TParams, THeaders>): {
    handler: TypeBoxHandler<TBody, TQuerystring, TParams, THeaders>;
    schema?: {
        body?: TBody | undefined;
        querystring?: TQuerystring | undefined;
        params?: TParams | undefined;
        headers?: THeaders | undefined;
        response?: Record<string, TSchema>;
    } | undefined;
    method: import("fastify").HTTPMethods | import("fastify").HTTPMethods[];
    url: string;
    bodyLimit?: number | undefined;
    attachValidation?: boolean | undefined;
    logLevel?: import("fastify").LogLevel | undefined;
    exposeHeadRoute?: boolean | undefined;
    prefixTrailingSlash?: "slash" | "no-slash" | "both" | undefined;
    config?: import("fastify").FastifyContextConfig | undefined;
    links?: {
        [statusCode: string]: {
            [link: string]: import("openapi-types").OpenAPIV3.ReferenceObject | import("openapi-types").OpenAPIV3.LinkObject;
        } | undefined;
    } | undefined;
    constraints?: import("fastify/types/route").RouteConstraint | undefined;
    onRequest?: import("fastify").onRequestHookHandler<import("fastify").RawServerDefault, import("http").IncomingMessage, import("http").ServerResponse<import("http").IncomingMessage>, import("fastify").RouteGenericInterface, unknown, NoInfer<import("fastify").FastifySchema>, import("fastify").FastifyTypeProviderDefault, import("fastify").FastifyBaseLogger> | import("fastify").onRequestHookHandler<import("fastify").RawServerDefault, import("http").IncomingMessage, import("http").ServerResponse<import("http").IncomingMessage>, import("fastify").RouteGenericInterface, unknown, NoInfer<import("fastify").FastifySchema>, import("fastify").FastifyTypeProviderDefault, import("fastify").FastifyBaseLogger>[] | undefined;
    preParsing?: import("fastify").preParsingHookHandler<import("fastify").RawServerDefault, import("http").IncomingMessage, import("http").ServerResponse<import("http").IncomingMessage>, import("fastify").RouteGenericInterface, unknown, NoInfer<import("fastify").FastifySchema>, import("fastify").FastifyTypeProviderDefault, import("fastify").FastifyBaseLogger> | import("fastify").preParsingHookHandler<import("fastify").RawServerDefault, import("http").IncomingMessage, import("http").ServerResponse<import("http").IncomingMessage>, import("fastify").RouteGenericInterface, unknown, NoInfer<import("fastify").FastifySchema>, import("fastify").FastifyTypeProviderDefault, import("fastify").FastifyBaseLogger>[] | undefined;
    preValidation?: import("fastify").preValidationHookHandler<import("fastify").RawServerDefault, import("http").IncomingMessage, import("http").ServerResponse<import("http").IncomingMessage>, import("fastify").RouteGenericInterface, unknown, NoInfer<import("fastify").FastifySchema>, import("fastify").FastifyTypeProviderDefault, import("fastify").FastifyBaseLogger> | import("fastify").preValidationHookHandler<import("fastify").RawServerDefault, import("http").IncomingMessage, import("http").ServerResponse<import("http").IncomingMessage>, import("fastify").RouteGenericInterface, unknown, NoInfer<import("fastify").FastifySchema>, import("fastify").FastifyTypeProviderDefault, import("fastify").FastifyBaseLogger>[] | undefined;
    preHandler?: import("fastify").preHandlerHookHandler<import("fastify").RawServerDefault, import("http").IncomingMessage, import("http").ServerResponse<import("http").IncomingMessage>, import("fastify").RouteGenericInterface, unknown, NoInfer<import("fastify").FastifySchema>, import("fastify").FastifyTypeProviderDefault, import("fastify").FastifyBaseLogger> | import("fastify").preHandlerHookHandler<import("fastify").RawServerDefault, import("http").IncomingMessage, import("http").ServerResponse<import("http").IncomingMessage>, import("fastify").RouteGenericInterface, unknown, NoInfer<import("fastify").FastifySchema>, import("fastify").FastifyTypeProviderDefault, import("fastify").FastifyBaseLogger>[] | undefined;
    preSerialization?: import("fastify").preSerializationHookHandler<unknown, import("fastify").RawServerDefault, import("http").IncomingMessage, import("http").ServerResponse<import("http").IncomingMessage>, import("fastify").RouteGenericInterface, unknown, NoInfer<import("fastify").FastifySchema>, import("fastify").FastifyTypeProviderDefault, import("fastify").FastifyBaseLogger> | import("fastify").preSerializationHookHandler<unknown, import("fastify").RawServerDefault, import("http").IncomingMessage, import("http").ServerResponse<import("http").IncomingMessage>, import("fastify").RouteGenericInterface, unknown, NoInfer<import("fastify").FastifySchema>, import("fastify").FastifyTypeProviderDefault, import("fastify").FastifyBaseLogger>[] | undefined;
    onSend?: import("fastify").onSendHookHandler<unknown, import("fastify").RawServerDefault, import("http").IncomingMessage, import("http").ServerResponse<import("http").IncomingMessage>, import("fastify").RouteGenericInterface, unknown, NoInfer<import("fastify").FastifySchema>, import("fastify").FastifyTypeProviderDefault, import("fastify").FastifyBaseLogger> | import("fastify").onSendHookHandler<unknown, import("fastify").RawServerDefault, import("http").IncomingMessage, import("http").ServerResponse<import("http").IncomingMessage>, import("fastify").RouteGenericInterface, unknown, NoInfer<import("fastify").FastifySchema>, import("fastify").FastifyTypeProviderDefault, import("fastify").FastifyBaseLogger>[] | undefined;
    onResponse?: import("fastify").onResponseHookHandler<import("fastify").RawServerDefault, import("http").IncomingMessage, import("http").ServerResponse<import("http").IncomingMessage>, import("fastify").RouteGenericInterface, unknown, NoInfer<import("fastify").FastifySchema>, import("fastify").FastifyTypeProviderDefault, import("fastify").FastifyBaseLogger> | import("fastify").onResponseHookHandler<import("fastify").RawServerDefault, import("http").IncomingMessage, import("http").ServerResponse<import("http").IncomingMessage>, import("fastify").RouteGenericInterface, unknown, NoInfer<import("fastify").FastifySchema>, import("fastify").FastifyTypeProviderDefault, import("fastify").FastifyBaseLogger>[] | undefined;
    onTimeout?: import("fastify").onTimeoutHookHandler<import("fastify").RawServerDefault, import("http").IncomingMessage, import("http").ServerResponse<import("http").IncomingMessage>, import("fastify").RouteGenericInterface, unknown, NoInfer<import("fastify").FastifySchema>, import("fastify").FastifyTypeProviderDefault, import("fastify").FastifyBaseLogger> | import("fastify").onTimeoutHookHandler<import("fastify").RawServerDefault, import("http").IncomingMessage, import("http").ServerResponse<import("http").IncomingMessage>, import("fastify").RouteGenericInterface, unknown, NoInfer<import("fastify").FastifySchema>, import("fastify").FastifyTypeProviderDefault, import("fastify").FastifyBaseLogger>[] | undefined;
    onRequestAbort?: import("fastify").onRequestAbortHookHandler<import("fastify").RawServerDefault, import("http").IncomingMessage, import("http").ServerResponse<import("http").IncomingMessage>, import("fastify").RouteGenericInterface, unknown, NoInfer<import("fastify").FastifySchema>, import("fastify").FastifyTypeProviderDefault, import("fastify").FastifyBaseLogger> | import("fastify").onRequestAbortHookHandler<import("fastify").RawServerDefault, import("http").IncomingMessage, import("http").ServerResponse<import("http").IncomingMessage>, import("fastify").RouteGenericInterface, unknown, NoInfer<import("fastify").FastifySchema>, import("fastify").FastifyTypeProviderDefault, import("fastify").FastifyBaseLogger>[] | undefined;
    onError?: import("fastify").onErrorHookHandler<import("fastify").RawServerDefault, import("http").IncomingMessage, import("http").ServerResponse<import("http").IncomingMessage>, import("fastify").RouteGenericInterface, unknown, import("fastify").FastifyError, NoInfer<import("fastify").FastifySchema>, import("fastify").FastifyTypeProviderDefault, import("fastify").FastifyBaseLogger> | import("fastify").onErrorHookHandler<import("fastify").RawServerDefault, import("http").IncomingMessage, import("http").ServerResponse<import("http").IncomingMessage>, import("fastify").RouteGenericInterface, unknown, import("fastify").FastifyError, NoInfer<import("fastify").FastifySchema>, import("fastify").FastifyTypeProviderDefault, import("fastify").FastifyBaseLogger>[] | undefined;
    errorHandler?: ((this: import("fastify").FastifyInstance<import("fastify").RawServerDefault, import("http").IncomingMessage, import("http").ServerResponse<import("http").IncomingMessage>, import("fastify").FastifyBaseLogger, import("fastify").FastifyTypeProviderDefault>, error: import("fastify").FastifyError, request: FastifyRequest<import("fastify").RouteGenericInterface, import("fastify").RawServerDefault, import("http").IncomingMessage, NoInfer<import("fastify").FastifySchema>, import("fastify").FastifyTypeProviderDefault, unknown, import("fastify").FastifyBaseLogger, import("fastify/types/type-provider").ResolveFastifyRequestType<import("fastify").FastifyTypeProviderDefault, NoInfer<import("fastify").FastifySchema>, import("fastify").RouteGenericInterface>>, reply: FastifyReply<import("fastify").RouteGenericInterface, import("fastify").RawServerDefault, import("http").IncomingMessage, import("http").ServerResponse<import("http").IncomingMessage>, unknown, NoInfer<import("fastify").FastifySchema>, import("fastify").FastifyTypeProviderDefault, unknown>) => void) | undefined;
    childLoggerFactory?: import("fastify/types/logger").FastifyChildLoggerFactory<import("fastify").RawServerDefault, import("http").IncomingMessage, import("http").ServerResponse<import("http").IncomingMessage>, import("fastify").FastifyBaseLogger, import("fastify").FastifyTypeProviderDefault> | undefined;
    validatorCompiler?: import("fastify").FastifySchemaCompiler<NoInfer<import("fastify").FastifySchema>> | undefined;
    serializerCompiler?: import("fastify/types/schema").FastifySerializerCompiler<NoInfer<import("fastify").FastifySchema>> | undefined;
    schemaErrorFormatter?: import("fastify/types/schema").SchemaErrorFormatter | undefined;
    helmet?: (Omit<import("@fastify/helmet").FastifyHelmetOptions, "global"> | false) | undefined;
};
